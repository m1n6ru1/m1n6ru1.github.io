[{"content":"Kali Linux 重要通知：必须手动更新仓库签名密钥 摘要\n近期，Kali Linux 用户在尝试更新系统时（运行 sudo apt update），可能会遇到签名验证错误，提示信息类似： Missing key 827C8569F2518CC677FECA1AED65462EC8D5E4C5, which is needed to verify signature.\n或者 OpenPGP signature verification failed: \u0026hellip; Missing key 827C8569F2518CC677FECA1AED65462EC8D5E4C5\u0026hellip;\n原因\n这是因为 Kali Linux 仓库更换了新的 GPG 签名密钥。旧密钥由于访问权限丢失（注意：并非泄露或被攻破）而无法继续使用，因此启用了新的密钥来签署软件包仓库。\n需要采取的行动\n为了能够继续正常更新 Kali 系统，所有用户都需要手动下载并安装新的仓库密钥环文件。\n操作步骤\n打开终端。\n执行以下命令（使用 wget）\nsudo wget https://archive.kali.org/archive-keyring.gpg -O /usr/share/keyrings/kali-archive-keyring.gpg 或者，如果你更喜欢使用 curl：\nsudo curl https://archive.kali.org/archive-keyring.gpg -o /usr/share/keyrings/kali-archive-keyring.gpg 验证（推荐）\n为了确保下载的文件正确无误，可以执行以下命令校验其 SHA1 哈希值：\nsha1sum /usr/share/keyrings/kali-archive-keyring.gpg 预期输出应为： 603374c107a90a69d983dbcb4d31e0d6eedfc325 /usr/share/keyrings/kali-archive-keyring.gpg\n密钥信息\n新的密钥环文件包含了新的签名密钥（ID: ED65462EC8D5E4C5，有效期至 2028年）和旧的签名密钥（ID: ED444FF07D8D0BF6，有效期至 2027年）。 新密钥的真实性可以通过 Kali 团队开发者的签名进行验证（可在 Ubuntu 密钥服务器上查询）。 完成更新\n安装新密钥后，再次运行 sudo apt update 和 sudo apt full-upgrade 即可正常更新系统。\n其他选项：全新安装\n对于计划进行全新安装的用户，所有官方 Kali 镜像（包括版本号为 2025.1c 的镜像、2025-W17 及之后的周构建版、NetHunter、虚拟机、云平台、Docker、WSL 等）均已更新，包含了新的密钥环文件。可以直接从 Get Kali 页面下载最新版本进行安装。\n","date":"2025-05-09T19:08:48+08:00","permalink":"https://m1n6ru1.github.io/post/kali%E5%AD%98%E6%A1%A3%E7%AD%BE%E5%90%8D%E5%AF%86%E9%92%A5%E4%B8%A2%E5%A4%B1/","title":"Kali存档签名密钥丢失"},{"content":"概述 使用高速CPU、嵌入式系统、支持各种高速接口\n特征：逻辑区域过滤器、隐藏内网网络结构、自身安全保障、主动防御攻击\n功能：可以用于访问控制、身份验证、数据加密、VPN技术、地址转换\n分类：\n按物理形态：硬件、软件\n按保护对象：单机、网络\n按访问控制：包过滤、代理、状态检测\n包过滤：简单便宜，只检测报文头部，逐包匹配导致效率低下。静态规则难以应付动态报文，ACL复杂后性能下降\n代理：处理速度慢、升级困难因为要为所有协议进行代理开发而开发时间长\n状态检测：安全策略检查，记录会话消息，考虑了前后报文连续性，处理后续包速度快，安全性高\n组网方式：\n只进行报文转发，不能进行路由寻址。必须处于同一个网段。处于2层（数据链路层），不能为接口进行IP配置。可以避免改变网络结构。\n位于内外部网络之间，位于第3层（网络层）。需要配置分别配置成不同网段Ip地址。负责在内部网络和外部网络进行路由寻址，支持NAT、UTM等功能，需要修改网络拓扑。然而在采用路由模式时,网络管理员可能需要修改网络拓扑,例如,内部网络用户需要更改网关,或路由器需要更改路由配置等。注意需要考虑网络改造、业务中断等问题。\n转发原理 包过滤技术 对于需要转发的数据包，先获取包头信息，然后和设定的规则进行比较，根据比较的结果对数据包进行转发或丢弃。\n实现包过滤的核心技术是访问控制列表ACL。\n防火墙安全策略 按照一定规则控制设备对流量转发以及对流量进行内容安全一体化检测的策略。\n规则的本质是包过滤。\n作用既有对于跨防火墙的网络互访进行控制，又有对设备本身的访问进行控制。\n原理是首先入数据流经过防火墙，接着查找防火墙安全策略并判断是否允许下一步操作，最后防火墙根据安全策略定义规则对于数据包进行处理。\n根据定义的规则对于经过防火墙的流量进行筛选，并根据关键字确定筛选出的流量如何进行下一步操作。\n关键字包括源地址、源区域、目的地址、目的区域、用户、服务和时间段等。\n防火墙域间转发 一般是检查IP的五元组（源IP、源端口、目的IP、目的端口、协议）判断一条数据流是否具有相同的数据报文。下一代防火墙还会检测用户、服务和时间段等。\n查询和创建会话 查询会话表，如果匹配会话表，进行安全性检查，通过安全性检查后刷新会话表，转发报文。如果没有匹配，检查是否可以创建会话，包括查看Server Map表、查找路由表、查找包过滤规则和NAT，生成会话表并转发报文。\n状态检测机制 当状态检测机制开启时，只有首包通过设备才能建立表项，后续包直接匹配会话表项进行转发；当状态检测机制关闭时，即使首包没有经过设备，后续包只要通过设备也可以生成会话表项。例如，TCP报文的首包是SYN包。\n查看会话表信息 显示会话表简要信息：displayfirewall session table\n主要显示了会话五元组。\n显示会话表详细信息：displayfirewall session table verbose\n多了会话ID、TTL、下一条、接口名称、接口MAC地址、包的大小等。\n安全策略的应用 条件：源安全区、目的安全区、源地址/地区、目的地址\\地区、用户、服务、应用、时间段\n动作：允许、禁止\n内容安全配置文件（可选）：反病毒、入侵防御、URL过滤、文件过滤、内容过滤、应用行为控制、邮件过滤\n对流量进行条件检查，然后执行允许或禁止的动作。根据各个配置文件进行检查来决定是否允许转发。\n安全策略配置流程 配置安全区域（可选）\n配置接口\n配置用户和认证（可选）\n配置对象（可选） 配置地址和地址组 地址是一个或若干个IPv4或IPv6或MAC地址，而地址组是地址的集合。只需定义一次，就可以被各种策略（安全策略、NAT策略等）多次引用。 配置服务和服务组 服务是通过协议类型和端口号来确定的应用协议类型，服务组是服务和服务组的集合。 配置应用和应用组 应用是指用来执行某一个特殊任务或用途的计算机程序，应用组是指多个应用的集合。 配置时间段 定义了时间范围，定义好的时间段被策略应用后，可以对某一时间段内流经防火墙的流量进行匹配和控制。\n定义安全配置文件（可选）\n包括反病毒、入侵防御、URL过滤、文件过滤、内容过滤、应用行为控制、邮件过滤。\n配置安全策略\n保存和提交配置\n","date":"2023-07-29T12:55:41Z","permalink":"https://m1n6ru1.github.io/post/%E9%98%B2%E7%81%AB%E5%A2%99%E6%8A%80%E6%9C%AF/","title":"防火墙技术"},{"content":"同步通信（synchronous communication） 在同步通信过程中，一方发送消息并阻塞以等待回复。这往往是最为简单的实现模式，而且只依靠阻塞I/O。然而，这可能需要超时机制以防某些错误意味着永远不会回复。\n异步通信（Asynchronous communication） 在异步通信过程中，一方发送消息，继续其它任务而不是等待回复。当回复最终到来时，它会被处理。这可能是在另一个线程来处理，或者通过中断当前的线程来处理。像这样的应用会更难构建，但是使用时会更加灵活。\n流式通信（Stream Communication） 在流式通信中，一方发送连续的消息流。在线视频就是一个很好的例子。流式传输可能需要实时处理，可能会也可能不会容忍损失，并且可以 单向或允许反向通信，如控制消息中所示。\n发布/订阅（Publish/Subscribe） 在发布/订阅系统中，各方订阅主题，其他人发布主题。这可以是小规模，也可以是大规模，正如推特所证明的那样。\n","date":"2023-07-21T15:59:11Z","permalink":"https://m1n6ru1.github.io/post/%E4%B8%BB%E6%9C%BA%E4%B9%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F/","title":"主机之间的通信方式"},{"content":"vim缓存 vim临时文件 目前主要的文本编辑软件都会有恢复的功能，当系统宕机时，可以通过特别的机制来恢复数据。vim就是通过缓存来恢复。\n在vim的一般命令模式下按下ctrl-z键，vim会被放在后台执行。此时可以看到隐藏的缓存文件test.swp，当vim进程结束后，缓存文件会自动删除。\n使用kill指令清除vim进程，模拟宕机的情况。 kill -9 表示强制杀死该进程。此时，由于vim的工作被不正常的中断，导致缓存文件不会被自动删除。再次打开test文件时会有警告。\n如果实际出现上述警告，原因及解决方法如下：\n多人同时编辑：输入o，即只读。 不知名原因导致vim中断：输入r，恢复文件；再次打开时，输入d，删除缓存。 当vim在编辑文档的过程中如果异常退出，则会产生缓存文件。第一次产生的缓存文件后缀为.swp，第二次则产生的缓存文件后缀为.swo,第三次产生的缓存文件后缀为.swn。\n使用命令vim -r 可以查看当前目录下的所有swp文件。\n使用命令vim -r filename可以恢复文件，这样上次意外退出并且没有保存的修改，就可以覆盖文件。\n调用这类的隐藏文件的时候，需要在最前面加.(如删除index.php.swp，则需要rm -fr* .index.php.swp).\nvim使用的缓存存储是一种固定的二进制文件，我们可以通过curl命令，或者vim命令进行查看。\nvim备份文件 默认情况下使用Vim编程，在修改文件后系统会自动生成一个带~的备份文件和带un~的操作记录文件（用于下次打开时撤销），某些情况下可以对其下载进行查看。\n设置避免产生这两个文件的方法：\nset nobackup set noundofile .DS_Store文件 .DS_Store 是 Mac OS 保存文件夹的自定义属性的隐藏文件。通过.DS_Store可以知道这个目录里面所有文件的清单。\n","date":"2022-10-31T20:21:36Z","permalink":"https://m1n6ru1.github.io/post/%E7%BD%91%E7%AB%99%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/","title":"网站信息泄露"},{"content":"安装mysql 在官网下载mysql(mysql-8.0.29-winx64.zip)，解压文件夹，重命名为MySQL\n新建一份my.ini配置文件\n[mysqld] # 设置3306端口 port=3306 # 设置mysql的安装目录 basedir=xxx # 设置mysql数据库的数据的存放目录 datadir=xxx/data # 此处同上 # 允许最大连接数 max_connections=1000 # 服务端使用的字符集为utf8mb4 character-set-server=utf8mb4 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB [mysql] # 设置mysql客户端默认字符集为utf8mb4 default-character-set=utf8mb4 [client] # 设置mysql客户端连接服务端时默认使用的端口 port=3306 其中xxx是MySQL文件夹所在绝对路径\n在mysql\\bin目录下执行命令初始化\nmysqld --initialize --console 并记住打印的临时密码\n或者 mysqld --initialize-insecure --console生成空密码\n安装php 在PHP官网上下载线程安全版本的PHP(php-7.4.30-Win32-vc15-x64.zip)，解压文件夹，重命名为PHP\n在PHP文件夹内复制一份php.ini-development，重命名为php.ini，作为php的配置文件\n去掉extension_dir前的注释以及部分extension前的分号注释，以启用php拓展\n安装apache 在官网下载apache(httpd-2.4.54-win64-VS16.zip)，解压文件夹，重命名为Apache24\n在Apache24文件夹以外某个地方新建一个WWW文件夹用于存放网页\n在Apache24/conf文件夹下的httpd.conf文件中：\n找到Define SRVROOT c:\\apache，将其修改为Apache24文件夹所在路径\n找到DocumentRoot \u0026quot;${SRVROOT}/htdocs，将${SRVROOT}/htdocs修改为WWW文件夹所在路径\n找到\u0026lt;Directory \u0026quot;${SRVROOT}/htdocs\u0026quot;\u0026gt;，将${SRVROOT}/htdocs修改为WWW文件夹所在路径\n在\u0026lt;IfModule dir_module\u0026gt;与\u0026lt;/IfModule\u0026gt;之间添加如下几行：\nDirectoryIndex index.html index.php 在\u0026lt;IfModule mime_module\u0026gt;与\u0026lt;/IfModule\u0026gt;之间添加如下几行：\nAddType application/x-httpd-php .php AddType application/x-httpd-php .html AddType application/x-httpd-php-source .phps 添加一行PHPIniDir \u0026quot;xxx\u0026quot;,其中xxx是php.ini所在目录\n在与之间修改ScriptAlias /cgi-bin/ 后的路径为Apache24/cgi-bin/目录所在的计算机绝对路径\n取消LoadModule vhost_alias_module modules/mod_vhost_alias.so的注释以启用虚拟目录\n取消Include conf/extra/httpd-vhosts.conf前的注释\n添加一行 LoadModule php7_module \u0026quot;xxx\u0026quot;，xxx是php7apache2_4.dll的绝对路径\n在Apache24\\conf\\extra文件夹下的httpd-vhosts.conf文件中添加：\n\u0026lt;Directory \u0026#34;xxx\u0026#34;\u0026gt; Options Indexes FollowSymLinks AllowOverride All Require all granted \u0026lt;/Directory\u0026gt; \u0026lt;VirtualHost *:80\u0026gt; ServerAdmin localhost DocumentRoot \u0026#34;xxx\u0026#34; \u0026lt;/VirtualHost\u0026gt; 其中xxx是WWW文件夹所在绝对路径\n配置环境变量 将Apache24\\bin、PHP、Mysql\\bin 添加到系统环境变量中\n以管理员身份注册apache和mysql服务\nhttpd -k install mysqld --install ","date":"2022-08-02T17:01:23Z","permalink":"https://m1n6ru1.github.io/post/windows%E4%B8%8A%E8%87%AA%E8%A1%8C%E6%90%AD%E5%BB%BAphp%E5%A5%97%E4%BB%B6/","title":"Windows上自行搭建PHP套件"},{"content":" 操作系统版本:Kali 2022.2\n通过apt下载docker并启动docker服务 sudo apt install -y docker.io sudo systemctl start docker 输入docker version查看docker的版本：\n注意到这里只显示了Client的信息，下面有一个报错: persission denied\n这是因为我们安装的时候是用的sudo安装，普通用户没有权限连接docker的服务端。 解决办法是把当前用户加入到docker组里面去。\n添加当前用户到docker组并重启docker服务 sudo usermod -aG docker $USER sudo systemctl daemon-reload sudo systemctl restart docker 第一次实际操作时我不小心敲成docker restart了\n切换当前会话到docker组 newgrp - docker 安装完成 再次输入docker version，正常显示完整信息：\n后续步骤 Docker国内镜像加速 sudo vim /etc/docker/daemon.json 添加：\n{ \u0026#34;registry-mirrors\u0026#34;:[ \u0026#34;https://docker.1panel.live\u0026#34; ] } 设置开机启动Docker sudo systemctl enable docker ","date":"2022-07-25T11:48:32Z","permalink":"https://m1n6ru1.github.io/post/docker%E7%9A%84%E5%AE%89%E8%A3%85/","title":"Docker的安装"},{"content":"\n2021年7月底，我们前往青海格尔木，目的是游览久负盛名的“甘青大环线”。\n所谓“甘青大环线”,网上的解释是：\n甘青大环线位于甘肃、青海两省境内，泛指近年来因旅游形成的由甘肃兰州或青海 西宁出发，途径青海湖，门源，张掖，敦煌，格尔木大柴旦等地的旅游自驾环线。全程 长约4000公里，为最经典的西北7—15日旅游环线。\n而我们此行将主要探访位于柴达木盆地(Tsaidam Basin)深处的大柴旦、冷湖、茫崖地区。\n启程 7月26日上午，我们前往成都双流机场，下午将乘坐飞机经停西宁机场并最终抵达格尔木。由于天气原因飞机一度延误，下午两点半起飞。\n第一天：抵达高原 我们在傍晚时分抵达了这座位于柴达木盆地核心地带的高原城市，并且找到了预约好的租赁车。我们在商场购置了大量的食物和矿泉水，并在位于兴隆街的一家餐馆就餐。\n我们吃了具有当地特色的面条、酸奶以及羊肉，之后马不停蹄在夜色下驱车前往锡铁山脚下的大柴旦。\n沿路开始水草丰美，但后来我们看到了盐湖和盐碱地，风沙也变得大了起来。\n第二天：漫游 我们抵达了大柴旦，并在一家旅馆落了脚。当地是高原，我感觉到了一丝高原反应的不适感，因此晚上睡不着，第二天挣扎着起来，困并且鼻子有点不舒服。我们上午前往“翡翠湖”游览，这是一片翠绿的盐湖。\n下午我们抵达了南八仙地区，这里可以说是荒漠地带了，没有树木，只有连绵不绝的雅丹地貌(Yardang Landform)和尘土。我们路过一片美丽的盐湖，但是这里原本就是一家盐厂，无法进去。我们用无人机拍摄了几张照片之后离开了。\n我们经过东台吉乃尔湖，看见湖水澄蓝，海鸥飞翔，自然美景令人流连忘返。\n我们抵达了据说是世界上唯一的水上雅丹地貌区–乌素特水上雅丹。水上雅丹让我想起了电视上见过的浙江千岛湖，一片一片的水上的突起陆地。但是不同的是这里是黄色的水上丘陵，风很大，还有海鸥在空中徘徊。水是蓝色的，向大海一样澄澈明净。\n继续出发，我们路过了一段火星表面似的狭长地带，对面来车时，卷起了阵阵黄沙。不幸的是，我们发现路的尽头是一家商业营地，将我们和我们的酒店阻隔开了，于是有不得不返回。车里播放的音乐有一句歌词是“跑调的老歌”，显得非常苍凉。\n我们终于抵达了老冷湖地区，当地有一片建筑物的废墟，历史上当地曾经有很多人为石油工业付出了青春和汗水。然后我们进入了一片宁静的小城，这里就是冷湖镇了。我们晚上在一家四川风格的餐厅吃了大盘鸡和炒苦瓜。\n晚上我们住进了一家板房搭成的酒店，虽然条件上不如大柴旦的那一家，但是我明显感觉到更舒服和温馨了，因为酒店的拖鞋和我在家里穿的竟然一模一样。\n第三天：湖泊，草原，奇遇 早上起来，我们驱车前往茫崖市，一路上依然是一片荒凉的景象，然后我们抵达了另一片盐湖，也叫“翡翠湖”，但是这里又是另一种景象。这里的泥土地是黄色的，而大柴旦翡翠湖地面则是黑色的；大柴旦盐湖颜色明艳而深刻，而这里的湖水颜色更加淡。\n无人机从天空中俯视湖面，湖底的碧绿便呈现在眼前。\n简单地吃了自热米饭后，我们抵达了下榻的酒店，洗了洗澡，然后傍晚时分准备出发前往一个非常奇异的地方。\n一路上我们的车颠来簸去地艰难行进着，然后我们惊奇的发现当地竟然出现了一大片草原！这是我们几天旅程中见到的少有的绿色植被了。然后我们抵达了目的地–艾肯泉。\n艾肯泉具有“魔鬼之眼”(The devil’s eye)的称号，难怪这里的一切都是令人惊奇的。我们坐游览车进入景区深处，终于见到了这座奇异的泉水。它周围是棕褐色的土地，泉水从地下向四周喷涌。无人机在天空中为我们拍摄到它的全貌。\n这时候发生了一件尴尬的事情，就是我们离开之后，我发现手机不见了，然后我们回去找。草原上蚊子很多，因此我们再回去的路上被咬得非常难受。所幸有善良的人见到了我的手机，约定好了地点，还给了我。\n我们回去之后，在一家餐厅吃了很多，主要有椒麻鸡、很宽的拌面条，血旺，以及一种当地特有的食物–椒蒿，拿来炒土豆丝。\n第四天：沙漠，水上雅丹 第二天早上我吃了五个胡萝卜馅的包子以及一大碗黑米稀饭。然后我们继续行进，已经上午9点了，淡淡的月亮竟然仍然在天上。路过了一片沙漠，我们进去拍了照，沙地是非常难走的，我踩着其他人的脚印走了出去。\n下午我们决定离开这里，返回格尔木。中途我们又路过了水上雅丹，进去玩了一个下午。我渐渐克服了先前的恐惧，登上了一个半岛似的山丘，风景非常壮丽。当时的心情就像我国古代的曹操登临碣石一样：\n东临碣石，以观沧海。 水何澹澹，山岛竦峙。 树木丛生，百草丰茂。 秋风萧瑟，洪波涌起。 日月之行，若出其中。 星汉灿烂，若出其里。 幸甚至哉！歌以咏志。\n我们临时改变返程的道路，在日暮的时候有幸路过了盐湖的一角，旁边屹立着一座刻有“盐海之上”字样的石碑。湖水富含卤素，因此在夕阳的余晖照耀之下显得格外美丽动人。\n深夜我们去格尔木市区吃了一顿烧烤和炕锅羊肉，这时已经是凌晨了。返回酒店后，不必赶路的我们终于可以好好休息一宿。\n第五天：返程 第二天中午，我们去当地的餐厅吃了一顿面条和羊肉，然后踏上了前往机场的道路。\n我们的旅程结束了，星夜从万米高空的飞机上往下俯瞰的成都夜景是那样的壮丽而温馨。\n","date":"2022-07-23T18:53:55Z","permalink":"https://m1n6ru1.github.io/post/%E9%9D%92%E6%B5%B7%E6%B8%B8%E8%AE%B0/","title":"青海游记"}]